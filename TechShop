-- Criação do banco de dados
CREATE DATABASE TechShop;
USE TechShop;

-- Criação da tabela Categoria
CREATE TABLE Categoria (
    CategoriaID INT PRIMARY KEY AUTO_INCREMENT,
    Nome VARCHAR(255) NOT NULL,
    Descricao TEXT
);

-- Criação da tabela Produto
CREATE TABLE Produto (
    ProdutoID INT PRIMARY KEY AUTO_INCREMENT,
    Nome VARCHAR(255) NOT NULL,
    Descricao TEXT,
    Preco DECIMAL(10, 2) NOT NULL,
    Estoque INT NOT NULL,
    CategoriaID INT,
    FOREIGN KEY (CategoriaID) REFERENCES Categoria(CategoriaID)
);

-- Criação da tabela Cliente
CREATE TABLE Cliente (
    ClienteID INT PRIMARY KEY AUTO_INCREMENT,
    Nome VARCHAR(255) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    Telefone VARCHAR(20),
    Endereco TEXT
);

-- Criação da tabela Pedido
CREATE TABLE Pedido (
    PedidoID INT PRIMARY KEY AUTO_INCREMENT,
    ClienteID INT,
    FuncionarioID INT, -- Adicionado para registrar o funcionário que gerenciou o pedido
    DataPedido DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Status ENUM('Pendente', 'Em Processamento', 'Enviado', 'Concluído', 'Cancelado') DEFAULT 'Pendente',
    FOREIGN KEY (ClienteID) REFERENCES Cliente(ClienteID),
    FOREIGN KEY (FuncionarioID) REFERENCES Funcionario(FuncionarioID) -- Relacionamento com Funcionario
);

-- Criação da tabela PedidoProduto (tabela de relação entre Pedido e Produto)
CREATE TABLE PedidoProduto (
    PedidoID INT,
    ProdutoID INT,
    Quantidade INT NOT NULL,
    Preco DECIMAL(10, 2) NOT NULL,
    PRIMARY KEY (PedidoID, ProdutoID),
    FOREIGN KEY (PedidoID) REFERENCES Pedido(PedidoID),
    FOREIGN KEY (ProdutoID) REFERENCES Produto(ProdutoID)
);

-- Criação da tabela Funcionario
CREATE TABLE Funcionario (
    FuncionarioID INT PRIMARY KEY AUTO_INCREMENT,
    Nome VARCHAR(255) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    Telefone VARCHAR(20),
    Cargo VARCHAR(255)
);

-- Criação da tabela ItemLanchonete
CREATE TABLE ItemLanchonete (
    ItemID INT PRIMARY KEY AUTO_INCREMENT,
    NomeItem VARCHAR(255) NOT NULL,
    QuantidadeDisponivel INT NOT NULL,
    PrecoUnitario DECIMAL(10, 2) NOT NULL
);

-- Criação da tabela PedidoLanchonete
CREATE TABLE PedidoLanchonete (
    PedidoID INT PRIMARY KEY AUTO_INCREMENT,
    ClienteID INT,
    FuncionarioID INT, -- Adicionado para registrar o funcionário que gerenciou o pedido
    DataHora DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ClienteID) REFERENCES Cliente(ClienteID),
    FOREIGN KEY (FuncionarioID) REFERENCES Funcionario(FuncionarioID) -- Relacionamento com Funcionario
);

-- Criação da tabela ItemPedidoLanchonete (tabela de relação entre PedidoLanchonete e ItemLanchonete)
CREATE TABLE ItemPedidoLanchonete (
    PedidoID INT,
    ItemID INT,
    Quantidade INT NOT NULL,
    ValorTotal DECIMAL(10, 2) NOT NULL,
    PRIMARY KEY (PedidoID, ItemID),
    FOREIGN KEY (PedidoID) REFERENCES PedidoLanchonete(PedidoID),
    FOREIGN KEY (ItemID) REFERENCES ItemLanchonete(ItemID)
);

-- Criação da tabela ProblemaEquipamento
CREATE TABLE ProblemaEquipamento (
    ProblemaID INT PRIMARY KEY AUTO_INCREMENT,
    EquipamentoID INT,
    Descricao VARCHAR(255),
    DataHora DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Status ENUM('Resolvido', 'Pendente') DEFAULT 'Pendente',
    FOREIGN KEY (EquipamentoID) REFERENCES Equipamento(EquipamentoID) -- Relacionamento com Equipamento
);

-- Criação da tabela Equipamento
CREATE TABLE Equipamento (
    EquipamentoID INT PRIMARY KEY AUTO_INCREMENT,
    NomeEquipamento VARCHAR(255),
    Tipo ENUM('Console', 'PC'),
    Descricao TEXT
);
